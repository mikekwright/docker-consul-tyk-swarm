#!/usr/bin/env bash
# vi: ft=sh
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source $SCRIPT_DIR/shared

start_redis() {
  pushd redis
  docker-compose up -d
  popd
}

start_mongo() {
  pushd mongo
  docker-compose up -d
  popd
}

start_tyk_gateway() {
  pushd tyk-gateway
  docker-compose build
  docker-compose up -d
  popd
}

start_tyk_dashboard() {
  pushd tyk-dashboard
  docker-compose build
  docker-compose up -d
  popd
}


create_user() {
  #docker run -e affinity:image==$HELPER_IMAGE 
  local dashboard_ip=$(find_dashboard_ip)
  local gateway_ip=$(find_gateway_ip)

  ## Start by creating a new organization to use
  local org_data=$(docker run -e affinity:image==$HELPER_IMAGE $HELPER_IMAGE curl --silent --header "admin-auth: 12345" --header "Content-Type:application/json" --data '{"owner_name": "TestOrg5 Ltd.","owner_slug": "testorg", "cname_enabled":true}' http://$dashboard_ip:3000/admin/organisations 2>&1)
  debug "Organization data: $org_data"
  local org_id=$(docker run -e affinity:image==$HELPER_IMAGE $HELPER_IMAGE sh -c "echo '$org_data' | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"Meta\"]'")
  info "Organization created: $org_id"

  ## Next you will need to create the user
  local user_data=$(docker run -e affinity:image==$HELPER_IMAGE $HELPER_IMAGE curl --silent --header "admin-auth: 12345" --header "Content-Type:application/json" --data '{"first_name": "John","last_name": "Smith","email_address": "'$DASHBOARD_USERNAME'", "password":"'$DASHBOARD_PASSWORD'", "active": true,"org_id": "'$org_id'"}' http://$dashboard_ip:3000/admin/users 2>&1)
  debug "User data: $user_data"
  local user_auth=$(docker run -e affinity:image==$HELPER_IMAGE $HELPER_IMAGE sh -c "echo '$user_data' | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"Message\"]'")
  info "User auth: $user_auth"
  local user_id=$(docker run -e affinity:image==$HELPER_IMAGE $HELPER_IMAGE sh -c "echo '$user_data' | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"Meta\"][\"id\"]'")
  info "User id: $user_id"

  ## Setup the portal domain
  echo "Setting up the portal domain"
  output=$(docker run -e affinity:image==$HELPER_IMAGE $HELPER_IMAGE curl --silent -d "domain="$PORTAL_DOMAIN"" -H "admin-auth:12345" http://$dashboard_ip:3000/admin/organisations/$org_id/generate-portals)
  debug "Setting portal domain output: $output"


  info "===================================="
  info "Login at http://$dashboard_ip:3000/"
  info "Username: $DASHBOARD_USERNAME"
  info "Password: $DASHBOARD_PASSWORD"
  info "Portal: http://$PORTAL_DOMAIN"
  info "Gateway: http://$gateway_ip:8080/"
}


pushd $SCRIPT_DIR > /dev/null

start_redis
start_mongo
start_tyk_gateway
start_tyk_dashboard
build_helper_image
create_user

popd > /dev/null

